#! /usr/bin/env bash

# Create a static site for /blank.
#
# Most of the work is done by nix-build: building a repository results in a
# static site presenting that repository at `result/`.
#
# If the build fails, the failure is recorded and rendered elsewhere (`result/`
# is for successful nix-build only).
#
# nix-build is called on blank.nix, which requires some angle-bracket to be
# filled; so this scripts first generates a JSON file (e.g. with the commit
# being built).
#
# Takes a repository name as argument or --all.

echo "blank-generate Called with $1" >> /blank/blank.log

if [[ -z "$1" ]] ; then
  echo "Usage: blank-generate --all | REPO"
  exit 1
fi

if [[ ! -d "/blank/$1.git" ]] ; then
  echo "No such repository."
  exit 1
fi

if [[ "$1" == "--all" ]] ; then
  find /blank/ -maxdepth 1 -type d -name '*.git' -exec basename {} \; > \
    /blank/list-of-repositories.txt
else
  echo "$1.git" > /blank/list-of-repositories.txt
fi


cd /home/thu/projects/nubs-bash
cat /blank/list-of-repositories.txt | \
  while read -r line ; do
    REPO="${line%.*}"

    # Generate a mini-site for a particular repository.
    echo "blank-generate Processing ${REPO}..." >> /blank/blank.log
    nix-prefetch-git --quiet --leave-dotGit "/blank/${REPO}.git" > "blank-${REPO}.json"
    nix-build --option substitute false \
      blank.nix -A blank.site -I "repository=blank-${REPO}.json" > \
      /blank/build.log 2>&1
    EXIT_CODE="$?"
    cat /blank/build.log
    mkdir -p "../entrypoint/as-is/nubs-bash/${REPO}"
    if [[ $EXIT_CODE -ne 0 ]]; then
      echo "blank-generate Failure processing ${REPO}." >> /blank/blank.log

      cat > failure.txt <<EOF
<div class="red">
<span">Build failure.</span>
<code><pre>
EOF
      cat /tmp/blank-build.log >> failure.txt
      cat >> failure.txt <<EOF
</pre></code></div>
EOF
      if [[ -f "../entrypoint/as-is/nubs-bash/${REPO}/index.html" ]] ; then
        m1='^<!-- Build failure. -->$'
        m2='^<!-- End build failure. -->$'
        sed -i -e "/$m1/,/$m2/{ /$m1/{p; r failure.txt
          }; /$m2/p; d }" \
          "../entrypoint/as-is/nubs-bash/${REPO}/index.html"
      else
          cat failure.txt > "../entrypoint/as-is/nubs-bash/${REPO}/index.html"
      fi
    else
      echo "blank-generate Success processing ${REPO}." >> /blank/blank.log
      rsync -aP --delete result/ "../entrypoint/as-is/nubs-bash/${REPO}/"
      chmod u+w -R  "../entrypoint/as-is/nubs-bash/${REPO}"
      # Nudge a bit browser-sync so it picks up changed files.
      find "../entrypoint/as-is/nubs-bash/${REPO}" -exec touch {} \;
    fi

  done

# Generate an index with a list of all repositories.
echo "blank-generate Generating index..." >> /blank/blank.log
cat templates/begin.html > ../entrypoint/as-is/nubs-bash/index.html
find /blank/ -maxdepth 1 -type d -name '*.git' -exec basename {} \; | \
  while read -r line ; do
    REPO="${line%.*}"
    echo "<li><a href=${REPO}>${REPO}</a></li>" >> \
      "../entrypoint/as-is/nubs-bash/index.html"
  done
cat templates/end.html >> ../entrypoint/as-is/nubs-bash/index.html

echo "blank-generate Done." >> /blank/blank.log
