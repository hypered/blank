#! /usr/bin/env bash

# Write a file (combines add and commit) to a repository.
# The file content is read from stdin.
#
# Example usage:
#
#   cat README.md | bin/blank-write-file alice/blank-readme README.md
#
# This is used by blank-server.hs to serve the /edit/save route:
#
#   curl -X POST -d repository=blank -d filename=README.md -d content=Wooh. \
#     http://1.reesd.com/edit/save

USER_NAME="$(echo $1 | cut -d / -f 1)"
REPO_NAME="$(echo $1 | cut -d / -f 2)"
FILE_NAME="$2"

HOME_DIR="/var/lib/blank"
LOG_DIR="${HOME_DIR}/log"
LOG_FILE="${LOG_DIR}/blank.log"
mkdir -p "${LOG_DIR}"

echo "blank-write-file Called with $1 $2" >> "${LOG_FILE}"


if [[ -z "${REPO_NAME}" ]] ; then
  echo "Usage: blank-write-file USERNAME/REPO FILENAME"
  exit 1
fi

REPO_BASENAME=$(basename -- "${REPO_NAME}")

if [[ "${REPO_NAME}" != "${REPO_BASENAME}" ]] ; then
  echo "The repository name can't be a path."
  exit 1
fi

if [[ -z "${FILE_NAME}" ]] ; then
  echo "Usage: blank-write-file USERNAME/REPO FILENAME"
  exit 1
fi

FILE_BASENAME=$(basename -- "${FILE_NAME}")

if [[ "${FILE_BASENAME}" != "${FILE_NAME}" ]] ; then
  echo "The filename can't be a path."
  exit 1
fi

REPO_PATH="${HOME_DIR}/repos/${USER_NAME}/${REPO_NAME}.git"

# Create the blob.
BLOB_SHA1=$(git \
  --git-dir "${REPO_PATH}" \
  hash-object -w --stdin)

# Add the blob to the index, which is either constructed from the state of HEAD
# or a new empty tree.
git --git-dir "${REPO_PATH}" read-tree HEAD > /dev/null 2>&1 \
  || git --git-dir "${REPO_PATH}" read-tree --empty
git --git-dir "${REPO_PATH}" update-index \
  --add \
  --cacheinfo 0644 "${BLOB_SHA1}" "${FILE_NAME}"

# Create the tree, using the index.
TREE_SHA1=$(git --git-dir "${REPO_PATH}" write-tree)

# Find the current commit, which will serve as the parent of the one we
# construct now.
PARENT_SHA1=$(git --git-dir="${REPO_PATH}" show-ref -s master)

WITH_PARENT=""
if [[ -n "${PARENT_SHA1}" ]] ; then
  WITH_PARENT="-p ${PARENT_SHA1}"
fi

# TODO Associate an author name to each user
# TODO Associate an email address to each user
export GIT_AUTHOR_NAME="${USER_NAME}"
export GIT_AUTHOR_EMAIL="${USER_NAME}@users.noreply.reesd.com"
export GIT_AUTHOR_DATE="$(date --iso-8601=minutes --utc)"
export GIT_COMMITTER_NAME="$GIT_AUTHOR_NAME"
export GIT_COMMITTER_DATE="$GIT_AUTHOR_DATE"
export GIT_COMMITTER_EMAIL="$GIT_AUTHOR_EMAIL"
export TZ="UTC"

# Create the commit.
COMMIT_SHA1=$( \
 git --git-dir "${REPO_PATH}" \
   commit-tree ${TREE_SHA1} ${WITH_PARENT})

# Update master to the new commit.
git \
  --git-dir "${REPO_PATH}" \
  update-ref refs/heads/master ${COMMIT_SHA1}
